{
	"info": {
		"_postman_id": "3ec8abdd-27a7-4c2b-aebb-b3532641b8b7",
		"name": "Endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22361139",
		"_collection_link": "https://cloudy-astronaut-342785.postman.co/workspace/03290aff-1466-4733-8556-9e720a2b747e/collection/22361139-3ec8abdd-27a7-4c2b-aebb-b3532641b8b7?action=share&creator=22361139&source=collection_link"
	},
	"item": [
		{
			"name": "Chapters",
			"item": [
				{
					"name": "/chapters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"chapters_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/chapters/",
							"host": [
								"{{host}}"
							],
							"path": [
								"chapters",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/chapters/:chapterId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"chapter_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/chapters/24909",
							"host": [
								"{{host}}"
							],
							"path": [
								"chapters",
								"24909"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Characters",
			"item": [
				{
					"name": "/characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"characters_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/characters",
							"host": [
								"{{host}}"
							],
							"path": [
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "macbeth",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/characters/:charId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"character_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/characters/1player-ham",
							"host": [
								"{{host}}"
							],
							"path": [
								"characters",
								"1player-ham"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Paragraphs",
			"item": [
				{
					"name": "/paragraphs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"paragraphs_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/paragraphs",
							"host": [
								"{{host}}"
							],
							"path": [
								"paragraphs"
							],
							"query": [
								{
									"key": "term",
									"value": "angel shall",
									"disabled": true
								},
								{
									"key": "workId",
									"value": "macbeth",
									"disabled": true
								},
								{
									"key": "charId",
									"value": "Countess-aw",
									"disabled": true
								},
								{
									"key": "work_info",
									"value": "",
									"disabled": true
								},
								{
									"key": "term",
									"value": "outrageous fortune",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/paragraphs/:paragraphId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"paragraph_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/paragraphs/859870",
							"host": [
								"{{host}}"
							],
							"path": [
								"paragraphs",
								"859870"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Genres",
			"item": [
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"genres_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							],
							"query": [
								{
									"key": "name",
									"value": "comedy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/:genreType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"genre_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/c",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quotations",
			"item": [
				{
					"name": "/quotations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"quotations_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/quotations?work=macbeth",
							"host": [
								"{{host}}"
							],
							"path": [
								"quotations"
							],
							"query": [
								{
									"key": "work",
									"value": "macbeth"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/quotations/:quotationId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"quotation_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/quotations/34084923",
							"host": [
								"{{host}}"
							],
							"path": [
								"quotations",
								"34084923"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wordforms",
			"item": [
				{
					"name": "/wordforms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"wordforms_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/wordforms",
							"host": [
								"{{host}}"
							],
							"path": [
								"wordforms"
							]
						}
					},
					"response": []
				},
				{
					"name": "/wordforms/:wordformId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"wordform_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/wordforms/763487",
							"host": [
								"{{host}}"
							],
							"path": [
								"wordforms",
								"763487"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Works",
			"item": [
				{
					"name": "/works",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"works_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/works",
							"host": [
								"{{host}}"
							],
							"path": [
								"works"
							],
							"query": [
								{
									"key": "genre",
									"value": "tragedy",
									"disabled": true
								},
								{
									"key": "title",
									"value": "an",
									"disabled": true
								},
								{
									"key": "date",
									"value": "1606",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/works/:workId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = JSON.parse(pm.variables.get(\"work_schema\"));\r",
									"\r",
									"pm.test(\"Has valid schema\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/works/allswell",
							"host": [
								"{{host}}"
							],
							"path": [
								"works",
								"allswell"
							],
							"query": [
								{
									"key": "paragraphs",
									"value": null,
									"disabled": true
								},
								{
									"key": "chapters",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}